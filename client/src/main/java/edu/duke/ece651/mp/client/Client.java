/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.duke.ece651.mp.client;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.Arrays;

import edu.duke.ece651.mp.common.Map;
import edu.duke.ece651.mp.common.V1Map;

public class Client {
  final TextPlayer theTextPlayer;

  /**
   * constructor
   */
  public Client(String servername, int port, BufferedReader inputReader, PrintStream out)
      throws IOException, UnknownHostException {
    this.theTextPlayer = new TextPlayer(servername, port, inputReader, out);
  }

  /**
   * Main program for Client/Player
   */
  public static void main(String[] args) throws InterruptedException {
    try {
      int port = args.length > 0 ? Integer.parseInt(args[1]) : 8080;
      String servername = args.length > 1 ? args[0] : "127.0.0.1";

      BufferedReader input = new BufferedReader(new InputStreamReader(System.in));
      Client theClient = new Client(servername, port, input, System.out);

      if (servername != "null") {
        // Send "Ready "message to Server
        String msg = "Client is ready.";
        theClient.theTextPlayer.connectionToMaster.sendToServer(msg);
        theClient.theTextPlayer.receiveIdentity();
        theClient.theTextPlayer.receiveMap();
        theClient.theTextPlayer.printMap();

        // In reality, server will send a request to the player for entering turn
        // for test purpose, we're just taking turn manually
        //theClient.theTextPlayer.takeAndSendTurn();
        
        theClient.theTextPlayer.takeTurn(); // TEMPORARY --- use takeAndSendTurn()

        theClient.theTextPlayer.connectionToMaster.socket.close();

      } else {

        // The map should be received from master
        // Here we are mocking receiving player's color and map from server
        String test_color = "Green";
        theClient.theTextPlayer.setIdentity(test_color);
        System.out.println("My player's color: " + test_color);
        ArrayList<String> players_colors = new ArrayList<String>(Arrays.asList("Green", "Blue"));
        V1Map<Character> mapFromServer = new V1Map<Character>(players_colors);
        theClient.theTextPlayer.updateMap(mapFromServer);
        theClient.theTextPlayer.printMap();
        theClient.theTextPlayer.takeTurn();
      }
      
    } catch (

    Exception e) {
      e.printStackTrace();
    }
  }
}
